// ‡πÑ‡∏ü‡∏•‡πå: netlify/functions/send-to-telegram.js (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏à‡∏£‡∏¥‡∏á)

exports.handler = async (event) => {
  // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Method
  if (event.httpMethod !== 'POST') {
    return { statusCode: 405, body: 'Method Not Allowed' };
  }

  // 2. ‡∏î‡∏∂‡∏á Secrets ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const { 
    TELEGRAM_BOT_TOKEN, 
    CHAT_ID_POS1, // ‡∏õ‡∏£‡∏∞‡∏à‡∏≥ (‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‚Äì‡∏®‡∏∏‡∏Å‡∏£‡πå 09:00‚Äì17:00)
    CHAT_ID_POS2, // ‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå (‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‚Äì‡πÄ‡∏™‡∏≤‡∏£‡πå 17:00‚Äì23:00)
    CHAT_ID_POS3, // ‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå 10:30‚Äì20:00)
    TELEGRAM_CHAT_ID  // ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô (Fallback)
  } = process.env;

  if (!TELEGRAM_BOT_TOKEN || !CHAT_ID_POS1 || !CHAT_ID_POS2 || !CHAT_ID_POS3) {
    return { statusCode: 500, body: 'Bot configuration missing one or more Chat IDs' };
  }

  // 3. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const data = JSON.parse(event.body);
  const positionText = data.position || ""; // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

  // 4. Logic ‡∏Ñ‡∏±‡∏î‡πÅ‡∏¢‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏° (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
  let targetChatId;
  if (positionText.includes("‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥")) {
    targetChatId = CHAT_ID_POS1;
  } else if (positionText.includes("‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‚Äì‡πÄ‡∏™‡∏≤‡∏£‡πå 17:00‚Äì23:00")) {
    targetChatId = CHAT_ID_POS2;
  } else if (positionText.includes("‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå 10:30‚Äì20:00")) {
    targetChatId = CHAT_ID_POS3;
  } else {
    targetChatId = TELEGRAM_CHAT_ID || CHAT_ID_POS1; // ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏° 1
  }

  // 5. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Escape (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
  const escape = (str) => {
    if (!str) return 'N/A';
    return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
  };

  // 6. !! ‡πÉ‡∏´‡∏°‡πà !! ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô
  let workHistoryText = "N/A (‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥‡∏á‡∏≤‡∏ô)";
  if (data.workCount && parseInt(data.workCount, 10) > 0) {
    workHistoryText = `\n(‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ${escape(data.workCount)} ‡∏ó‡∏µ‡πà)\n`;
    if (data.workplace1) {
      workHistoryText += `<b>1. ${escape(data.workplace1)}</b>\n`;
      workHistoryText += `   <i>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:</i> ${escape(data.position1) || 'N/A'}\n`;
      workHistoryText += `   <i>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥:</i> ${escape(data.description1) || 'N/A'}\n`;
    }
    if (data.workplace2) {
      workHistoryText += `<b>2. ${escape(data.workplace2)}</b>\n`;
      workHistoryText += `   <i>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:</i> ${escape(data.position2) || 'N/A'}\n`;
      workHistoryText += `   <i>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥:</i> ${escape(data.description2) || 'N/A'}\n`;
    }
    if (data.workplace3) {
      workHistoryText += `<b>3. ${escape(data.workplace3)}</b>\n`;
      workHistoryText += `   <i>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:</i> ${escape(data.position3) || 'N/A'}\n`;
      workHistoryText += `   <i>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥:</i> ${escape(data.description3) || 'N/A'}\n`;
    }
  }

  // 7. ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
  const startDate = data.start_date_type === 'immediate'
    ? '‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ'
    : `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${escape(data.specific_start_date) || '<i>‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏</i>'}`;

  let text = `<b>üîî ‡∏°‡∏µ‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà!</b>\n\n`;
  text += `<b>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:</b> ${escape(data.position)}\n`;
  text += `<b>‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•:</b> ${escape(data.first_name)} ${escape(data.last_name)} (<b>${escape(data.nickname)}</b>)\n`;
  text += `<b>‡∏≠‡∏≤‡∏¢‡∏∏/‡∏ô‡∏ô./‡∏™‡∏π‡∏á:</b> ${escape(data.age)} ‡∏õ‡∏µ / ${escape(data.weight)} ‡∏Å‡∏Å. / ${escape(data.height)} ‡∏ã‡∏°.\n`;
  text += `<b>‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:</b> ${escape(data.phone)} (Line: ${escape(data.line_id)})\n`;
  text += `<b>‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤:</b> ${escape(data.education)}\n`;
  text += `<b>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</b> ${escape(data.address)}\n`;
  text += `<b>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô:</b> ${startDate}\n`;
  text += `<b>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô:</b> ${workHistoryText}\n\n`;
  if (data.photo_url) {
    text += `<a href="${data.photo_url}"><b>üîó ‡∏î‡∏π‡∏£‡∏π‡∏õ‡∏ñ‡πà‡∏≤‡∏¢‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£</b></a>`;
  } else {
    text += `<b>üîó ‡∏î‡∏π‡∏£‡∏π‡∏õ‡∏ñ‡πà‡∏≤‡∏¢‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£:</b> <i>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå</i>`;
  }

  // 8. ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà Telegram API
  const telegramBaseUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;
  const sendTelegramRequest = async (endpoint, payload) => {
    const response = await fetch(`${telegramBaseUrl}/${endpoint}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    });

    if (!response.ok) {
      throw new Error(`Telegram API error (${endpoint}): ${response.statusText}`);
    }

    return response.json();
  };

  try {
    if (data.photo_url) {
      const caption = `‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: <b>${escape(data.position)}</b>\n‡∏ä‡∏∑‡πà‡∏≠: <b>${escape(data.first_name)} ${escape(data.last_name)}</b>`;
      await sendTelegramRequest('sendPhoto', {
        chat_id: targetChatId,
        photo: data.photo_url,
        caption,
        parse_mode: 'HTML',
      });
    }

    await sendTelegramRequest('sendMessage', {
      chat_id: targetChatId,
      text: text,
      parse_mode: 'HTML',
      disable_web_page_preview: false, // ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á preview ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡πÑ‡∏î‡πâ
    });

    return { statusCode: 200, body: JSON.stringify({ message: 'Success' }) };
  } catch (error) {
    return { statusCode: 500, body: JSON.stringify({ message: error.message }) };
  }
};
